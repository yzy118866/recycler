# Generated by Django 4.1.4 on 2023-11-21 11:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("recycler", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Landfill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата редактирования"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Локация текстом",
                    ),
                ),
            ],
            options={
                "verbose_name": "Полигон",
                "verbose_name_plural": "Полигоны",
            },
        ),
        migrations.CreateModel(
            name="TicketTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шаблон талона",
                "verbose_name_plural": "Шаблоны талона",
            },
        ),
        migrations.AddField(
            model_name="company",
            name="author",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="company_author",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="actual_volume",
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name="Объем фактический"),
        ),
        migrations.AddField(
            model_name="ticket",
            name="author",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="ticket_author",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="fkko",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="recycler.fkko",
                verbose_name="ФККО",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="ticket_volume",
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name="Объем в талоне"),
        ),
        migrations.AlterField(
            model_name="ticket",
            name="company",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ticket_template",
                to="recycler.company",
                verbose_name="Шаблон тикета",
            ),
        ),
        migrations.AlterField(
            model_name="ticket",
            name="status",
            field=models.CharField(
                choices=[
                    ("cr", "Создан"),
                    ("ar", "Архив"),
                    ("nc", "Несоответствие"),
                    ("er", "Ошибка"),
                ],
                default="cr",
                max_length=2,
                verbose_name="Статус",
            ),
        ),
        migrations.CreateModel(
            name="NonComplianceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата редактирования"),
                ),
                (
                    "car_model",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Наименование транспортного средства",
                    ),
                ),
                (
                    "car_num",
                    models.CharField(blank=True, max_length=100, verbose_name="Номер машины"),
                ),
                (
                    "car_driver",
                    models.CharField(blank=True, max_length=100, verbose_name="ФИО водителя"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="noncompliance_author",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="noncompliance_reports",
                        to="recycler.ticket",
                        verbose_name="Талон",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
